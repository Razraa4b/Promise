<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:rxui="http://reactiveui.net"
        xmlns:i="using:Avalonia.Xaml.Interactivity"
		xmlns:ia="using:Avalonia.Xaml.Interactions.Core"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        xmlns:vm="clr-namespace:Promise.Application.ViewModels;assembly=Promise.Application"
        xmlns:controls="clr-namespace:Promise.UI.Controls;assembly=Promise.UI"
		xmlns:converters="clr-namespace:Promise.UI.Converters;assembly=Promise.UI"
		x:DataType="vm:MainViewModel"
		x:Class="Promise.UI.Views.MainWindow"
        Title="Promise App" 
		Width="1000" Height="600"
		MinWidth="220" MinHeight="40"
        ExtendClientAreaToDecorationsHint="True"
        ExtendClientAreaChromeHints="NoChrome"
        ExtendClientAreaTitleBarHeightHint="-1"
        TransparencyLevelHint="AcrylicBlur"
        Background="Transparent">
	<Window.Resources>
		<converters:ControlPropertyValueConverter x:Key="controlPropertyValueConverter"/>
	</Window.Resources>
	<Window.Styles>
		<Style Selector="TabItem">
			<Setter Property="Background" Value="{DynamicResource HighUniformThemeColor}"/>
			<Setter Property="Foreground" Value="{DynamicResource FontStrongThemeColor}"/>
			<Setter Property="Margin" Value="5 0"/>
			<Setter Property="FontSize" Value="12"/>
			<Setter Property="Height" Value="28"/>
			<Setter Property="CornerRadius" Value="100"/>
			<Setter Property="Template">
				<ControlTemplate>
					<Border
						Name="PART_LayoutRoot"
						Height="{TemplateBinding Height}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}"
						Padding="{TemplateBinding Padding}">
						<ContentPresenter
								Name="PART_ContentPresenter"
								Foreground="{TemplateBinding Foreground}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Content="{TemplateBinding Header}"
								ContentTemplate="{TemplateBinding HeaderTemplate}"
								RecognizesAccessKey="True"/>
					</Border>
				</ControlTemplate>
			</Setter>
		</Style>
		<Style Selector="TabItem:pointerover:not(:selected) /template/ Border#PART_LayoutRoot">
			<Setter Property="Background" Value="{DynamicResource MediumUniformThemeColor}" />
		</Style>
		<Style Selector="TabItem:selected /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Foreground" Value="{DynamicResource FontStrongThemeColor}"/>
		</Style>
		<Style Selector="TabItem:pointerover:not(:selected) /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Foreground" Value="{DynamicResource FontStrongThemeColor}"/>
		</Style>
		<Style Selector="TabItem:selected /template/ Border#PART_LayoutRoot">
			<Setter Property="Background" Value="{DynamicResource LowUniformThemeColor}"/>
		</Style>
	</Window.Styles>
	<ExperimentalAcrylicBorder IsHitTestVisible="True">
		<ExperimentalAcrylicBorder.Material>
			<ExperimentalAcrylicMaterial
				BackgroundSource="Digger"
				TintColor="Black"
				TintOpacity="1"
				MaterialOpacity="0.4" />
		</ExperimentalAcrylicBorder.Material>

		<DockPanel>
			<controls:TitleBar Name="TitleBar" IsHitTestVisible="True"
							   Height="28" DockPanel.Dock="Top"
							   Title="Promise App"/>

			<!-- View selection panel for navigation -->
			<Border DockPanel.Dock="Top"
					Background="{DynamicResource SolidThemeColor}"
					HorizontalAlignment="Stretch">
				<TabControl Name="SelectionControl" HorizontalAlignment="Center">
					<i:Interaction.Behaviors>
						<ia:EventTriggerBehavior EventName="SelectionChanged"
												 SourceObject="{Binding #SelectionControl}">
							<ia:InvokeCommandAction PassEventArgsToCommand="True"
													CommandParameter="{Binding Path=SelectedItem, ElementName=SelectionControl,
																	   Converter={StaticResource controlPropertyValueConverter}, 
																	   ConverterParameter=Header}"
													Command="{Binding NavigateViewCommand}"/>
						</ia:EventTriggerBehavior>
					</i:Interaction.Behaviors>
					<TabControl.ItemsPanel>
						<ItemsPanelTemplate>
							<WrapPanel/>
						</ItemsPanelTemplate>
					</TabControl.ItemsPanel>
					<TabItem Header="Notes" IsSelected="True"/>
					<TabItem Header="Reports"/>
					<TabItem Header="Events"/>
					<TabItem Header="Schedule"/>
					<TabItem Header="Settings"/>
					<TabItem Header="Account"/>
				</TabControl>
			</Border>
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition/>
					<ColumnDefinition/>
					<ColumnDefinition/>
					<ColumnDefinition/>
					<ColumnDefinition/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition MinHeight="30"/>
					<RowDefinition/>
					<RowDefinition/>
					<RowDefinition/>
					<RowDefinition/>
				</Grid.RowDefinitions>

				<!-- Control that showing the current view -->
				<rxui:RoutedViewHost Grid.RowSpan="5" Grid.ColumnSpan="5"
									 Router="{Binding Router}"/>
			</Grid>
		</DockPanel>
	</ExperimentalAcrylicBorder>
</Window>
