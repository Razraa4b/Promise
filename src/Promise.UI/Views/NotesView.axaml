<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"		
		     xmlns:i="using:Avalonia.Xaml.Interactivity"
			 xmlns:ia="using:Avalonia.Xaml.Interactions.Core"
			 xmlns:vm="clr-namespace:Promise.Application.ViewModels;assembly=Promise.Application"
			 xmlns:m="clr-namespace:Promise.Domain.Entities;assembly=Promise.Domain"
             xmlns:controls="clr-namespace:Promise.UI.Controls;assembly=Promise.UI"
			 x:DataType="vm:NotesViewModel"
			 x:Class="Promise.UI.Views.NotesView">
	<controls:ModalDialog Name="MainDialog">
		<!-- Modal dialog when creating note -->
		<controls:ModalDialog.Dialog>
			<Border Width="225" Height="150"
					DataContext="{Binding $parent.((vm:NotesViewModel)DataContext)}"
					CornerRadius="15" Padding="20 10">
				<Border.Background>
					<SolidColorBrush Color="{DynamicResource MediumUniformThemeColor}"/>
				</Border.Background>
				<DockPanel HorizontalAlignment="Stretch"
						   LastChildFill="False">
					<!-- Note title input -->
					<StackPanel DockPanel.Dock="Top"
								HorizontalAlignment="Stretch">
						<TextBlock Text="Note title"
								   TextAlignment="Center"/>
						<TextBox Name="TitleTextBox" Margin="0 10"/>
					</StackPanel>

					<!-- Confirm and cancel buttons -->
					<StackPanel HorizontalAlignment="Center"
								DockPanel.Dock="Bottom"
								Orientation="Horizontal">
						<Button IsEnabled="{Binding Text, ElementName=TitleTextBox,
										     Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
								Content="Create" Margin="5 0">
							<i:Interaction.Behaviors>
								<ia:EventTriggerBehavior EventName="Click">
									<ia:InvokeCommandAction Command="{Binding CreateNoteCommand}"
														 CommandParameter="{Binding Text, ElementName=TitleTextBox}"/>
									<ia:InvokeCommandAction Command="{x:Static controls:ModalDialog.CloseDialogCommand}"
														 CommandParameter="{Binding $parent[controls:ModalDialog]}"/>
								</ia:EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</Button>

						<Button Content="Cancel" Margin="5 0">
							<i:Interaction.Behaviors>
								<EventTriggerBehavior EventName="Click">
									<InvokeCommandAction Command="{x:Static controls:ModalDialog.CloseDialogCommand}"
														 CommandParameter="{Binding $parent[controls:ModalDialog]}"/>
								</EventTriggerBehavior>
							</i:Interaction.Behaviors>
						</Button>
					</StackPanel>
				</DockPanel>
			</Border>
		</controls:ModalDialog.Dialog>

		<!-- Main view content -->
		<Grid Name="MainGrid"
			  DataContext="{Binding $parent.((vm:NotesViewModel)DataContext)}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition MinWidth="150" Width="180"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition/>
				<RowDefinition/>
				<RowDefinition Height="25"/>
			</Grid.RowDefinitions>

			<GridSplitter Width="8" Grid.Column="1" Grid.RowSpan="3"
						  Background="Transparent" ZIndex="9999"
						  DragDelta="GridSplitter_DragDelta"/>

			<!-- Notes tree -->
			<Border Grid.RowSpan="3"
					Opacity="0.7">
				<Border.Background>
					<SolidColorBrush Color="{DynamicResource MediumUniformThemeColor}"/>
				</Border.Background>
				<Grid>
					<TreeView Background="Transparent"
							  ItemsSource="{Binding Notes}"
							  SelectedItem="{Binding SelectedNote}"
							  SelectionMode="Single">
						<i:Interaction.Behaviors>
							<ia:EventTriggerBehavior EventName="SelectionChanged">
								<ia:InvokeCommandAction Command="{Binding ScheduleContentSaveCommand}"/>
							</ia:EventTriggerBehavior>
						</i:Interaction.Behaviors>
						<TreeView.ContextMenu>
							<ContextMenu>
								<MenuItem Header="Create"
										  Command="{x:Static controls:ModalDialog.ShowDialogCommand}"
										  CommandParameter="{Binding $parent[controls:ModalDialog]}"/>
								<MenuItem Name="DeleteButton"
										  Header="Delete"
										  Command="{Binding DeleteNoteCommand}"
										  IsEnabled="{Binding SelectedNote, UpdateSourceTrigger=PropertyChanged,
												  Converter={x:Static ObjectConverters.IsNotNull}}}"/>
							</ContextMenu>
						</TreeView.ContextMenu>

						<TreeView.ItemTemplate>
							<DataTemplate DataType="{x:Type m:Note}">
								<Border>
									<TextBlock Text="{Binding Title}"/>
								</Border>
							</DataTemplate>
						</TreeView.ItemTemplate>
					</TreeView>

					<TextBlock IsVisible="{Binding !Notes.Count}"
							   VerticalAlignment="Center"
							   HorizontalAlignment="Center"
							   TextWrapping="Wrap"
							   TextAlignment="Center">
						It's so empty
					</TextBlock>
				</Grid>
			</Border>

			<!-- Note content panel (for edit or read) -->
			<TextBox Grid.Column="1" Grid.ColumnSpan="2" Grid.RowSpan="2"
					 Text="{Binding SelectedNoteContent}" MinWidth="1"
					 AcceptsReturn="True" AcceptsTab="True"
					 Opacity="0.6" CornerRadius="0" BorderThickness="1">
				<TextBox.Background>
					<SolidColorBrush Color="{DynamicResource MainThemeColor}"/>
				</TextBox.Background>
				<TextBox.Foreground>
					<SolidColorBrush Color="{DynamicResource FontStrongThemeColor}"/>
				</TextBox.Foreground>
				<TextBox.BorderBrush>
					<SolidColorBrush Color="{DynamicResource MainThemeColor}"/>
				</TextBox.BorderBrush>
				<!-- Save the content when the user has switched to another control -->
				<i:Interaction.Behaviors>
					<ia:EventTriggerBehavior EventName="LostFocus">
						<ia:InvokeCommandAction Command="{Binding ScheduleContentSaveCommand}"/>
					</ia:EventTriggerBehavior>
				</i:Interaction.Behaviors>
				<TextBox.Styles>
					<Style Selector="TextBox /template/ TextPresenter#PART_TextPresenter">
						<Setter Property="Opacity" Value="1"/>
					</Style>

					<Style Selector="TextBox:pointerover">
						<Setter Property="Foreground">
							<Setter.Value>
								<SolidColorBrush Color="{DynamicResource FontStrongThemeColor}"/>
							</Setter.Value>
						</Setter>

						<Style Selector="^ /template/ Border#PART_BorderElement">
							<Setter Property="BorderBrush">
								<Setter.Value>
									<SolidColorBrush Color="{DynamicResource MainThemeColor}"/>
								</Setter.Value>
							</Setter>
							<Setter Property="Background">
								<Setter.Value>
									<SolidColorBrush Color="{DynamicResource MainThemeColor}"/>
								</Setter.Value>
							</Setter>
						</Style>
					</Style>

					<Style Selector="TextBox:focus">
						<Setter Property="Foreground">
							<Setter.Value>
								<SolidColorBrush Color="{DynamicResource FontStrongThemeColor}"/>
							</Setter.Value>
						</Setter>

						<Style Selector="^ /template/ TextBlock#PART_Watermark">
							<Setter Property="Foreground">
								<Setter.Value>
									<SolidColorBrush Color="{DynamicResource FontStrongThemeColor}"/>
								</Setter.Value>
							</Setter>
						</Style>

						<Style Selector="^ /template/ Border#PART_BorderElement">
							<Setter Property="Background">
								<Setter.Value>
									<SolidColorBrush Color="{DynamicResource MainThemeColor}"/>
								</Setter.Value>
							</Setter>
							<Setter Property="BorderBrush">
								<Setter.Value>
									<SolidColorBrush Color="{DynamicResource MainThemeColor}"/>
								</Setter.Value>
							</Setter>
							<Setter Property="BorderThickness" Value="1" />
						</Style>
					</Style>
				</TextBox.Styles>
			</TextBox>

			<!-- Text settings panel -->
			<Border Grid.Row="2" Grid.Column="1" Margin="5 0"
					Grid.ColumnSpan="2" Background="Transparent">
				<StackPanel Orientation="Horizontal"
						    FlowDirection="RightToLeft"
							HorizontalAlignment="Center"
							VerticalAlignment="Center">
					<StackPanel.Styles>
						<Style Selector="TextBlock">
							<Setter Property="FontSize" Value="12"/>
						</Style>
					</StackPanel.Styles>
					
					<TextBlock Text="The text settings will be presented here."/>
				</StackPanel>
			</Border>
		</Grid>
	</controls:ModalDialog>
</UserControl>
